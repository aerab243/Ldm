# Makefile for LDM IDM-style interface
# This builds the IDM-style interface as the main LDM application

# Compiler and flags
CXX = g++
CXXFLAGS = -std=c++20 -fPIC -Wall -Wextra
DEBUGFLAGS = -g -DDEBUG
RELEASEFLAGS = -O2 -DNDEBUG

# Qt6 configuration
QT6_INC = /usr/include/qt6
QT6_LIBS = -lQt6Core -lQt6Widgets -lQt6Gui

# Include directories
INCLUDES = -I$(QT6_INC) \
           -I$(QT6_INC)/QtCore \
           -I$(QT6_INC)/QtWidgets \
           -I$(QT6_INC)/QtGui

# Source files
SOURCES = src/main_idm.cpp
MOC_SOURCE = src/main_idm.moc

# Output executable
TARGET = ldm-idm
DEBUG_TARGET = ldm-idm-debug

# Default target
all: $(TARGET)

# Debug build
debug: CXXFLAGS += $(DEBUGFLAGS)
debug: $(DEBUG_TARGET)

# Release build
release: CXXFLAGS += $(RELEASEFLAGS)
release: $(TARGET)

# Generate MOC file
$(MOC_SOURCE): $(SOURCES)
	@echo "Generating MOC file..."
	@which moc >/dev/null 2>&1 || (echo "MOC not found, trying alternatives..."; false) || \
	 which moc-qt6 >/dev/null 2>&1 && moc-qt6 $(SOURCES) -o $(MOC_SOURCE) || \
	 which /usr/lib64/qt6/libexec/moc >/dev/null 2>&1 && /usr/lib64/qt6/libexec/moc $(SOURCES) -o $(MOC_SOURCE) || \
	 which /usr/lib/qt6/libexec/moc >/dev/null 2>&1 && /usr/lib/qt6/libexec/moc $(SOURCES) -o $(MOC_SOURCE) || \
	 (echo "Warning: MOC not found, creating empty MOC file"; touch $(MOC_SOURCE))

# Main target
$(TARGET): $(MOC_SOURCE)
	@echo "Building LDM IDM-style interface..."
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(SOURCES) $(QT6_LIBS) -o $(TARGET)
	@echo "✓ Build complete: $(TARGET)"

# Debug target
$(DEBUG_TARGET): $(MOC_SOURCE)
	@echo "Building LDM IDM-style interface (debug)..."
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(SOURCES) $(QT6_LIBS) -o $(DEBUG_TARGET)
	@echo "✓ Debug build complete: $(DEBUG_TARGET)"

# Install target
install: $(TARGET)
	@echo "Installing LDM..."
	install -d $(DESTDIR)/usr/bin
	install -m 755 $(TARGET) $(DESTDIR)/usr/bin/ldm
	@echo "✓ Installation complete"

# Uninstall target
uninstall:
	@echo "Uninstalling LDM..."
	rm -f $(DESTDIR)/usr/bin/ldm
	@echo "✓ Uninstallation complete"

# Run target
run: $(TARGET)
	@echo "Running LDM IDM-style interface..."
	./$(TARGET)

# Run debug target
run-debug: $(DEBUG_TARGET)
	@echo "Running LDM IDM-style interface (debug)..."
	./$(DEBUG_TARGET)

# Test target
test: $(TARGET)
	@echo "Testing LDM IDM-style interface..."
	timeout 5s ./$(TARGET) || echo "✓ Interface test completed"

# Clean target
clean:
	@echo "Cleaning build files..."
	rm -f $(TARGET) $(DEBUG_TARGET) $(MOC_SOURCE)
	@echo "✓ Clean complete"

# Package target (creates a simple tar.gz)
package: clean $(TARGET)
	@echo "Creating package..."
	tar -czf ldm-idm-$(shell date +%Y%m%d).tar.gz $(TARGET) README.md LICENSE
	@echo "✓ Package created"

# Check dependencies
check-deps:
	@echo "Checking dependencies..."
	@pkg-config --exists Qt6Core Qt6Widgets Qt6Gui && echo "✓ Qt6 found" || echo "✗ Qt6 not found"
	@which $(CXX) >/dev/null && echo "✓ C++ compiler found" || echo "✗ C++ compiler not found"
	@echo "Dependency check complete"

# Help target
help:
	@echo "LDM IDM-style Interface Build System"
	@echo ""
	@echo "Available targets:"
	@echo "  all          - Build release version (default)"
	@echo "  debug        - Build debug version"
	@echo "  release      - Build release version"
	@echo "  run          - Build and run release version"
	@echo "  run-debug    - Build and run debug version"
	@echo "  test         - Build and test interface"
	@echo "  install      - Install to system"
	@echo "  uninstall    - Remove from system"
	@echo "  package      - Create distribution package"
	@echo "  clean        - Remove build files"
	@echo "  check-deps   - Check for required dependencies"
	@echo "  help         - Show this help"
	@echo ""
	@echo "Example usage:"
	@echo "  make              # Build release version"
	@echo "  make debug        # Build debug version"
	@echo "  make run          # Build and run"
	@echo "  make install      # Install to /usr/bin/ldm"

# Mark phony targets
.PHONY: all debug release run run-debug test install uninstall package clean check-deps help

# Default goal
.DEFAULT_GOAL := all
